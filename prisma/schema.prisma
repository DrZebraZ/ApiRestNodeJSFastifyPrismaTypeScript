// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  email    String @unique
  cpf      String @unique
  password String
  salt     String

  Student   Student[]
  Professor Professor[]
}

model Student {
  id                  String   @id @default(cuid())
  name                String
  datenasc            String?
  avatarUrl           String?
  personalDescription String?
  createdAt           DateTime @default(now())
  active              Boolean  @default(true)

  user User @relation(fields: [userEmail], references: [email])

  token String @unique @default(cuid())

  Tccs     Tcc[]
  guidance Guidance[]
  classId  String

  Class     Class  @relation(fields: [classId], references: [id])
  userEmail String
}

model Professor {
  id                  String   @id @default(cuid())
  name                String
  datenasc            String?
  avatarUrl           String?
  personalDescription String?
  createdAt           DateTime @default(now())
  active              Boolean  @default(true)

  user User @relation(fields: [userEmail], references: [email])

  guidances Guidance[]

  token String @unique @default(cuid())

  tccs Tcc[]

  classes Class[]

  coordinate Class[] @relation(name: "coordinator")
  userEmail  String
}

model Class {
  id          String @id @unique @default(cuid())
  name        String
  classAreaId String

  coordinatorId String?
  coordinator   Professor? @relation(name: "coordinator", fields: [coordinatorId], references: [id])

  students   Student[]
  professors Professor[]

  tccs Tcc[]

  classArea Classarea @relation(fields: [classAreaId], references: [id])
}

model Classarea {
  id      String  @id @unique @default(cuid())
  name    String
  classes Class[]
}

model Tcc {
  id          String  @id @unique @default(cuid())
  title       String
  summary     String
  classId     String
  studantId   String
  professorId String?
  guidanceId  String?
  docFileLink String? @unique

  status String @default("ANDAMENTO")

  student Student @relation(fields: [studantId], references: [id])

  professor Professor? @relation(fields: [professorId], references: [id])

  guidance Guidance?
  Class    Class     @relation(fields: [classId], references: [id])
}

model Guidance {
  id          String     @id @unique
  tccId       String     @unique
  professorId String?
  studantId   String
  messages    Message[]
  professor   Professor? @relation(fields: [professorId], references: [id])
  studant     Student    @relation(fields: [studantId], references: [id])

  tcc Tcc @relation(fields: [tccId], references: [id])

  @@index([id, studantId])
  @@index([id, professorId])
}

model Message {
  id               String   @id @default(cuid())
  createdAt        DateTime @default(now())
  createdByStudent Boolean  @default(true)
  text             String
  guidanceId       String
  guidance         Guidance @relation(fields: [guidanceId], references: [id])
}
